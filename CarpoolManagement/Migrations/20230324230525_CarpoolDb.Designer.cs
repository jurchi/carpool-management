// <auto-generated />
using System;
using CarpoolManagement.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarpoolManagement.Migrations
{
    [DbContext(typeof(CarpoolContext))]
    [Migration("20230324230525_CarpoolDb")]
    partial class CarpoolDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("CarpoolManagement.Persistance.Models.CarEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("PK_CAR");

                    b.ToTable("Car", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Blue",
                            Name = "Blue Beetle - Commute Transport",
                            NumberOfSeats = 4,
                            Plate = "AB 123-CD",
                            Type = "VW Beetle"
                        },
                        new
                        {
                            Id = 2,
                            Color = "Gray",
                            Name = "Mustang - Quick support",
                            NumberOfSeats = 4,
                            Plate = "CD 456-EF",
                            Type = "Ford Mustang"
                        },
                        new
                        {
                            Id = 3,
                            Color = "Black",
                            Name = "Octavia - Travel",
                            NumberOfSeats = 5,
                            Plate = "EF 789-GH",
                            Type = "Skoda Octavia"
                        },
                        new
                        {
                            Id = 4,
                            Color = "Red",
                            Name = "Carnival - Team Travel",
                            NumberOfSeats = 7,
                            Plate = "GH 123-IJ",
                            Type = "Kia Carnival"
                        },
                        new
                        {
                            Id = 5,
                            Color = "Green",
                            Name = "Tacoma - Off Road Travel",
                            NumberOfSeats = 4,
                            Plate = "IJ 456-KL",
                            Type = "Toyota Tacoma"
                        },
                        new
                        {
                            Id = 6,
                            Color = "White",
                            Name = "Fabia #1 - Basic Travel",
                            NumberOfSeats = 5,
                            Plate = "KL 789-MN",
                            Type = "Skoda Fabia"
                        },
                        new
                        {
                            Id = 7,
                            Color = "White",
                            Name = "Fabia #2 - Basic Travel",
                            NumberOfSeats = 5,
                            Plate = "MN 123-OP",
                            Type = "Skoda Fabia"
                        },
                        new
                        {
                            Id = 8,
                            Color = "White",
                            Name = "Fabia #3 - Basic Travel",
                            NumberOfSeats = 5,
                            Plate = "OP 465-QR",
                            Type = "Skoda Fabia"
                        },
                        new
                        {
                            Id = 9,
                            Color = "Yellow",
                            Name = "Camaro - Quick support",
                            NumberOfSeats = 4,
                            Plate = "QR 789-ST",
                            Type = "Chevrolet Camaro"
                        },
                        new
                        {
                            Id = 10,
                            Color = "Other",
                            Name = "Bus - Interurban transport",
                            NumberOfSeats = 63,
                            Plate = "ST 123-UV",
                            Type = "Iveco Crossway"
                        });
                });

            modelBuilder.Entity("CarpoolManagement.Persistance.Models.EmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDriver")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("PK_EMPLOYEE");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDriver = true,
                            Name = "Sebastiana Chaudhari"
                        },
                        new
                        {
                            Id = 2,
                            IsDriver = true,
                            Name = "Garbán De Santiago"
                        },
                        new
                        {
                            Id = 3,
                            IsDriver = true,
                            Name = "Verginia McCallum"
                        },
                        new
                        {
                            Id = 4,
                            IsDriver = true,
                            Name = "Joleen Storstrand"
                        },
                        new
                        {
                            Id = 5,
                            IsDriver = true,
                            Name = "Durga Robbins"
                        },
                        new
                        {
                            Id = 6,
                            IsDriver = false,
                            Name = "Aeliana Grant"
                        },
                        new
                        {
                            Id = 7,
                            IsDriver = false,
                            Name = "Hamo Kumar"
                        },
                        new
                        {
                            Id = 8,
                            IsDriver = false,
                            Name = "Oskar Arnaud"
                        },
                        new
                        {
                            Id = 9,
                            IsDriver = false,
                            Name = "Rolando Waller"
                        },
                        new
                        {
                            Id = 10,
                            IsDriver = false,
                            Name = "Adam Dreessen"
                        },
                        new
                        {
                            Id = 11,
                            IsDriver = true,
                            Name = "Elyse Ray"
                        },
                        new
                        {
                            Id = 12,
                            IsDriver = true,
                            Name = "Arlo Tyler"
                        },
                        new
                        {
                            Id = 13,
                            IsDriver = true,
                            Name = "Helena Houston"
                        },
                        new
                        {
                            Id = 14,
                            IsDriver = true,
                            Name = "Sylas Vo"
                        },
                        new
                        {
                            Id = 15,
                            IsDriver = true,
                            Name = "Artemis Maxwell"
                        },
                        new
                        {
                            Id = 16,
                            IsDriver = false,
                            Name = "Eden Leblanc"
                        },
                        new
                        {
                            Id = 17,
                            IsDriver = false,
                            Name = "Novalee Dennis"
                        },
                        new
                        {
                            Id = 18,
                            IsDriver = false,
                            Name = "Joanna Mendez"
                        },
                        new
                        {
                            Id = 19,
                            IsDriver = false,
                            Name = "Arthur Poole"
                        },
                        new
                        {
                            Id = 20,
                            IsDriver = false,
                            Name = "Bonnie Flynn"
                        },
                        new
                        {
                            Id = 21,
                            IsDriver = true,
                            Name = "Kannon Boyer"
                        },
                        new
                        {
                            Id = 22,
                            IsDriver = true,
                            Name = "Chaya Ashley"
                        },
                        new
                        {
                            Id = 23,
                            IsDriver = true,
                            Name = "Kylen Woods"
                        },
                        new
                        {
                            Id = 24,
                            IsDriver = true,
                            Name = "Reese Dougherty"
                        },
                        new
                        {
                            Id = 25,
                            IsDriver = true,
                            Name = "Brett Sierra"
                        },
                        new
                        {
                            Id = 26,
                            IsDriver = false,
                            Name = "Kohen Hill"
                        },
                        new
                        {
                            Id = 27,
                            IsDriver = false,
                            Name = "Lillie Becker"
                        },
                        new
                        {
                            Id = 28,
                            IsDriver = false,
                            Name = "Andy Mata"
                        },
                        new
                        {
                            Id = 29,
                            IsDriver = false,
                            Name = "Zev Alvarez"
                        },
                        new
                        {
                            Id = 30,
                            IsDriver = false,
                            Name = "Raylan Lane"
                        });
                });

            modelBuilder.Entity("CarpoolManagement.Persistance.Models.RideShareEmployeeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RideShareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .HasDatabaseName("IX_FK_RIDE_SHARE_EMPLOYEE_01");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("PK_RIDE_SHARE_EMPLOYEE");

                    b.HasIndex("RideShareId")
                        .HasDatabaseName("IX_FK_RIDE_SHARE_EMPLOYEE");

                    b.ToTable("RideShareEmployee", (string)null);
                });

            modelBuilder.Entity("CarpoolManagement.Persistance.Models.RideShareEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DriverId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("DATE");

                    b.Property<string>("EndLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("DATE");

                    b.Property<string>("StartLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .HasDatabaseName("FK_CAR_ID");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("PK_RIDE_SHARE");

                    b.ToTable("RideShare", (string)null);
                });

            modelBuilder.Entity("CarpoolManagement.Persistance.Models.RideShareEmployeeEntity", b =>
                {
                    b.HasOne("CarpoolManagement.Persistance.Models.EmployeeEntity", "Employee")
                        .WithMany("RideShareEmployee")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RIDE_SHARE_EMPLOYEE_01");

                    b.HasOne("CarpoolManagement.Persistance.Models.RideShareEntity", "RideShare")
                        .WithMany("RideShareEmployee")
                        .HasForeignKey("RideShareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_RIDE_SHARE_EMPLOYEE");

                    b.Navigation("Employee");

                    b.Navigation("RideShare");
                });

            modelBuilder.Entity("CarpoolManagement.Persistance.Models.RideShareEntity", b =>
                {
                    b.HasOne("CarpoolManagement.Persistance.Models.CarEntity", "Car")
                        .WithMany("RideShare")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CAR_ID");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("CarpoolManagement.Persistance.Models.CarEntity", b =>
                {
                    b.Navigation("RideShare");
                });

            modelBuilder.Entity("CarpoolManagement.Persistance.Models.EmployeeEntity", b =>
                {
                    b.Navigation("RideShareEmployee");
                });

            modelBuilder.Entity("CarpoolManagement.Persistance.Models.RideShareEntity", b =>
                {
                    b.Navigation("RideShareEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
